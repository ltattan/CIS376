name: Build
on:
  push:
    branches:
      - master # or the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: <image ready for your build toolchain>
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download and install the build wrapper
        shell: powershell
        run: |
          $path = "$HOME/.sonar/build-wrapper-win-x86.zip"
          mkdir $HOME/.sonar
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          (New-Object System.Net.WebClient).DownloadFile("${{ secrets.SONAR_HOST_URL }}/static/cpp/build-wrapper-win-x86.zip", $path)
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          [System.IO.Compression.ZipFile]::ExtractToDirectory($path, "$HOME/.sonar")
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Download and install the SonarScanner
        shell: powershell
        run: |
          $path = "$HOME/.sonar/sonar-scanner-cli-4.6.2.2472-windows.zip"
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          (New-Object System.Net.WebClient).DownloadFile("https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-windows.zip", $path)
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          [System.IO.Compression.ZipFile]::ExtractToDirectory($path, "$HOME/.sonar")

      - name: Build and analyse the project
        shell: powershell
        run: |
          $env:Path += ";$HOME/.sonar/build-wrapper-win-x86;$HOME/.sonar/sonar-scanner-4.6.2.2472-windows/bin"
          build-wrapper-win-x86-64 --out-dir bw-output <your clean build command>
          sonar-scanner.bat "-Dsonar.cfamily.build-wrapper-output=bw-output"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
